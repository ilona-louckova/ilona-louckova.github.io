<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on ILXNAH&#39;s den</title>
    <link>/tags/hugo/</link>
    <description>Recent content in Hugo on ILXNAH&#39;s den</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 28 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating Obsidian blog with Hugo</title>
      <link>/posts/creating-obsidian-blog-with-hugo/</link>
      <pubDate>Tue, 28 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>/posts/creating-obsidian-blog-with-hugo/</guid>
      <description>&lt;p&gt;Following a &lt;a href=&#34;https://www.youtube.com/watch?v=dnE7c0ELEH8&#34;&gt;video from NetworkChuck&lt;/a&gt;, then freestyling it to GitHub Pages.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;We only know what we make.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;battle-plan&#34;&gt;Battle Plan&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Using &lt;a href=&#34;https://obsidian.md/&#34;&gt;Obsidian.md&lt;/a&gt; for taking notes - simply &amp;ldquo;type out the blog&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Turn it into HTML code, aka &amp;ldquo;make it code&amp;rdquo; using &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;Hugo&lt;/a&gt;: a tool to convert .md files into a website code&lt;/li&gt;
&lt;li&gt;Ship the code off/push site to &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I decided not to use Hostinger (like Chuck did) but was playing around with other ways of deployment on GitHub Pages (there are several different options and I&amp;rsquo;ll share the simplest one)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;rsquo;ll be setting this up on my Wins PC, but if you need Linux/Mac guidance, Chuck got those differences covered in &lt;a href=&#34;https://blog.networkchuck.com/posts/my-insane-blog-pipeline/&#34;&gt;his&lt;/a&gt; documentation. For the sake of sanity, I&amp;rsquo;m keeping my email/username/paths within the commands, i.e. don&amp;rsquo;t forget to change them.&lt;/p&gt;</description>
      <content>&lt;p&gt;Following a &lt;a href=&#34;https://www.youtube.com/watch?v=dnE7c0ELEH8&#34;&gt;video from NetworkChuck&lt;/a&gt;, then freestyling it to GitHub Pages.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;We only know what we make.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;battle-plan&#34;&gt;Battle Plan&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Using &lt;a href=&#34;https://obsidian.md/&#34;&gt;Obsidian.md&lt;/a&gt; for taking notes - simply &amp;ldquo;type out the blog&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Turn it into HTML code, aka &amp;ldquo;make it code&amp;rdquo; using &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;Hugo&lt;/a&gt;: a tool to convert .md files into a website code&lt;/li&gt;
&lt;li&gt;Ship the code off/push site to &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I decided not to use Hostinger (like Chuck did) but was playing around with other ways of deployment on GitHub Pages (there are several different options and I&amp;rsquo;ll share the simplest one)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;rsquo;ll be setting this up on my Wins PC, but if you need Linux/Mac guidance, Chuck got those differences covered in &lt;a href=&#34;https://blog.networkchuck.com/posts/my-insane-blog-pipeline/&#34;&gt;his&lt;/a&gt; documentation. For the sake of sanity, I&amp;rsquo;m keeping my email/username/paths within the commands, i.e. don&amp;rsquo;t forget to change them.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Install everything&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://obsidian.md/download&#34;&gt;Obsidian&lt;/a&gt;, &lt;a href=&#34;https://apps.microsoft.com/detail/9n0dx20hk701?hl=en-US&amp;amp;gl=US&#34;&gt;Terminal&lt;/a&gt;/PowerShell, &lt;a href=&#34;https://code.visualstudio.com/download&#34;&gt;VS Code&lt;/a&gt;, &lt;a href=&#34;https://go.dev/dl/&#34;&gt;Golang&lt;/a&gt;, &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Python 3&lt;/a&gt;, &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt; and &lt;a href=&#34;https://gohugo.io/installation/&#34;&gt;Hugo&lt;/a&gt; (add the .exe into your program location, e.g. Program Files, and also into PATH)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;posts&lt;/code&gt; folder within your Obsidian Workspace for your blog articles&lt;/li&gt;
&lt;li&gt;Within this folder, start a new note (that will be your first blog post)&lt;/li&gt;
&lt;li&gt;Double-check correct installations via the &lt;code&gt;version&lt;/code&gt; flagged commands:
&lt;code&gt;go version&lt;/code&gt;, &lt;code&gt;git --version&lt;/code&gt;, &lt;code&gt;hugo version&lt;/code&gt;, &lt;code&gt;python --version&lt;/code&gt; etc.&lt;/li&gt;
&lt;li&gt;Navigate to your desired directory for storing blog files on your machine, e.g.: &lt;code&gt;cd C:\Users\ilona\Documents\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a new folder for Hugo blog and set up git: &lt;code&gt;hugo new site ILXNAH.github.io&lt;/code&gt; &amp;gt; &lt;code&gt;cd .\ILXNAH.github.io&lt;/code&gt; &amp;gt; &lt;code&gt;git init&lt;/code&gt; &amp;gt; &lt;code&gt;git config --global user.name &amp;quot;ILXNAH&amp;quot;&lt;/code&gt; &amp;gt; &lt;code&gt;git config --global user.email &amp;quot;ILXNAH@tutanota.com&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Navigate to &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;Hugo Themes&lt;/a&gt; and pick a theme to install for your blog.&lt;/li&gt;
&lt;li&gt;Select installation option for a specific theme, e.g. look here for &lt;a href=&#34;https://themes.gohugo.io/themes/hugo-theme-terminal/&#34;&gt;Terminal theme&lt;/a&gt;. I used local installation to avoid any fuss when transferring between repos.
&lt;code&gt;git clone https://github.com/panr/hugo-theme-terminal.git themes/terminal&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Edit the config file called &lt;code&gt;hugo.toml&lt;/code&gt; - it needs to match the theme.
&lt;ul&gt;
&lt;li&gt;Terminal theme has a text file at the bottom of the page &lt;a href=&#34;https://themes.gohugo.io/themes/hugo-theme-terminal/#how-to-configure&#34;&gt;which you can copy it from&lt;/a&gt; (&lt;strong&gt;leave out modules part at the bottom&lt;/strong&gt;) and paste into your &lt;code&gt;hugo.toml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Via CLI, you can open it with command &lt;code&gt;notepad hugo.toml&lt;/code&gt; like Chuck, or &lt;code&gt;npp hugo.toml&lt;/code&gt; like myself (that&amp;rsquo;s another custom path), or use VS Code with &lt;code&gt;code hugo.toml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Next, run your Hugo server preview with &lt;code&gt;hugo serve&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;Take a look at &lt;a href=&#34;/&#34;&gt;//localhost:1313/&lt;/a&gt; &amp;gt; Ctrl+C to cancel website preview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;syncing-obsidian-to-hugo&#34;&gt;Syncing Obsidian to Hugo&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;posts folder will be syncing from &lt;code&gt;Obsidian Vault/posts&lt;/code&gt; into &lt;code&gt;/ILXNAH.github.io/content/posts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd content&lt;/code&gt; &amp;gt; &lt;code&gt;mkdir posts&lt;/code&gt; (this folder will be synced with Obsidian source folder) with this command:
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;robocopy &amp;#34;C:\Users\ilona\Documents\obsidian\posts&amp;#34; &amp;#34;C:\Users\ilona\Documents\ILXNAH.github.io\content\posts&amp;#34; /mir
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hugo serve&lt;/code&gt; to preview blog with imported posts &amp;gt; Ctrl+C to exit the preview&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;using-front-matter-in-obsidian&#34;&gt;Using Front Matter in Obsidian&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;set up metadata via Obsidian properties:
&lt;ul&gt;
&lt;li&gt;you can use a variation of community plugins,
&lt;ul&gt;
&lt;li&gt;I&amp;rsquo;m using &lt;a href=&#34;https://www.make.md/&#34;&gt;make.md&lt;/a&gt;, Chuck is using &lt;a href=&#34;https://github.com/SilentVoid13/Templater&#34;&gt;Templater&lt;/a&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;make sure the draft property is unchecked, so the post is displayed
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hugo serve -D&lt;/code&gt; flagged command will include posts in draft mode&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ideally, create a template with desired properties for your blog posts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;run robocopy again with added post properties in your source files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hugo serve&lt;/code&gt; to verify the metadata is showing &amp;gt; exit preview&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;fixing-image-attachments-using-a-python-script&#34;&gt;Fixing image attachments using a Python script&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;in your blog dir, &lt;code&gt;cd static&lt;/code&gt; &amp;gt; &lt;code&gt;mkdir images&lt;/code&gt; &amp;gt; &lt;code&gt;cd ..&lt;/code&gt; &amp;gt; &lt;code&gt;code images.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;insert code, make sure to edit all three paths, and save:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; re
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; shutil
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Paths (using raw strings to handle Windows backslashes correctly)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;posts_dir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Users\ilona\Documents\ILXNAH.github.io\content\posts&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;attachments_dir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Users\ilona\Documents\obsidian\Attachments&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;static_images_dir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Users\ilona\Documents\ILXNAH.github.io\static\images&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Step 1: Process each markdown file in the posts directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; filename &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;listdir(posts_dir):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; filename&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;endswith(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.md&amp;#34;&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        filepath &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(posts_dir, filename)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; open(filepath, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;, encoding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; file:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            content &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Step 2: Find all image links in the format ![Image Description](/images/Pasted%20image%20...%20.png)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        images &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;findall(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\[\[([^]]*\.png)\]\]&amp;#39;&lt;/span&gt;, content)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Step 3: Replace image links and ensure URLs are correctly formatted&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; image &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; images:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# Prepare the Markdown-compatible link with %20 replacing spaces&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            markdown_image &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;![Image Description](/images/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;image&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%20&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            content &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; content&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;image&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]]&amp;#34;&lt;/span&gt;, markdown_image)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# Step 4: Copy the image to the Hugo static/images directory if it exists&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            image_source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(attachments_dir, image)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exists(image_source):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                shutil&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;copy(image_source, static_images_dir)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Step 5: Write the updated content back to the markdown file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; open(filepath, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;, encoding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; file:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            file&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(content)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Markdown files processed and images copied successfully.&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;added image for testing purposes of the part of the script we just did:
&lt;img src=&#34;/images/Pasted%20image%2020250131130510.png&#34; alt=&#34;Image Description&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pushing-code-into-github&#34;&gt;Pushing code into GitHub&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;create GitHub repo with name &lt;code&gt;ILXNAH.github.io&lt;/code&gt; and set visibility to public&lt;/li&gt;
&lt;li&gt;you will need an SSH key, which you can generate with &lt;code&gt;ssh-keygen -t rsa -b 4096 -C &amp;quot;ILXNAH@tutanota.com&amp;quot;&lt;/code&gt; if you don&amp;rsquo;t have one yet&lt;/li&gt;
&lt;li&gt;this keypair (public and private key) will be created in dir &lt;code&gt;~/.ssh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;within that dir, to add pubkey to GitHub, copy its content displayed via &lt;code&gt;cat .\id_rsa.pub&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;GitHub &amp;gt; Settings &amp;gt; SSH &amp;gt; New key &amp;gt; paste in there&lt;/li&gt;
&lt;li&gt;test that it&amp;rsquo;s working on your PC with cmd &lt;code&gt;ssh -T git@github.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;in your blog dir, &lt;code&gt;git remote add origin git@github.com:ILXNAH/ILXNAH.github.io.git&lt;/code&gt; to define the remote repo (the one you created on GitHub) aka add it to your local setup &amp;gt; &lt;code&gt;git branch -M main&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;type &lt;code&gt;hugo&lt;/code&gt; to make sure website has been built&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt; to add all changes&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -m &amp;quot;First commit&amp;quot;&lt;/code&gt; to commit those changes (locally)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push -u origin main&lt;/code&gt; to push from local to remote repo
(specified is: first, name of your remote repo &lt;code&gt;origin&lt;/code&gt;, then branch name &lt;code&gt;main&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;deploy-on-github-profile-pages&#34;&gt;Deploy on GitHub profile Pages&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;on repo website, go to Settings &amp;gt; Pages &amp;gt; Source: GitHub Actions&lt;/li&gt;
&lt;li&gt;in your local repo, add folder &amp;ldquo;&lt;code&gt;.github&lt;/code&gt;&amp;rdquo;&lt;/li&gt;
&lt;li&gt;within there, create a folder called &amp;ldquo;&lt;code&gt;workflows&lt;/code&gt;&amp;rdquo;&lt;/li&gt;
&lt;li&gt;within there, create a &amp;ldquo;&lt;code&gt;hugo.yaml&lt;/code&gt;&amp;rdquo; file&lt;/li&gt;
&lt;li&gt;copy workflow code into &lt;code&gt;hugo.yaml&lt;/code&gt; from &lt;a href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/&#34;&gt;Hugo&amp;rsquo;s official documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt; &amp;gt; &lt;code&gt;git commit -m &amp;quot;github actions&amp;quot;&lt;/code&gt; &amp;gt; &lt;code&gt;git push&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;publishing-workflow&#34;&gt;Publishing Workflow&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;robocopy &amp;quot;C:\Users\ilona\Documents\obsidian\posts&amp;quot; &amp;quot;C:\Users\ilona\Documents\ILXNAH.github.io\content\posts&amp;quot; /mir&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python images.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hugo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(to view - can be skipped) &lt;code&gt;hugo serve --noHTTPCache&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;use this flag to avoid site refresh being stuck due to cache (if you&amp;rsquo;re editing in real-time)&lt;/li&gt;
&lt;li&gt;you can create alias: &lt;code&gt;hss=&#39;hugo serve --noHTTPCache&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt; &amp;gt; &lt;code&gt;git commit -m &amp;quot;change&amp;quot;&lt;/code&gt; &amp;gt; &lt;code&gt;git push&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    </item>
    
  </channel>
</rss>
